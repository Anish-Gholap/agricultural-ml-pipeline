data:
  path: '../data/agri.db'
  cat_target: 'Plant Type-Stage'
  num_target: 'Temperature Sensor (°C)'
  # numerical_features_reg: [
  #   'Light Intensity Sensor (lux)',
  #   'CO2 Sensor (ppm)',
  #   'EC Sensor (dS/m)',
  #   'O2 Sensor (ppm)',
  #   'Nutrient N Sensor (ppm)',
  #   'Nutrient P Sensor (ppm)',
  #   'Nutrient K Sensor (ppm)',
  #   'pH Sensor',
  #   'Water Level Sensor (mm)'
  # ]

  numerical_features_reg: [
    'Light Intensity Sensor (lux)',
    'CO2 Sensor (ppm)',
    'npk_ratio',
    'light_co2_ratio'
  ]

  numerical_features_class: [
    'Temperature Sensor (°C)',
    'Light Intensity Sensor (lux)',
    'CO2 Sensor (ppm)',
    'EC Sensor (dS/m)',
    'O2 Sensor (ppm)',
    'Nutrient N Sensor (ppm)',
    'Nutrient P Sensor (ppm)',
    'Nutrient K Sensor (ppm)',
    'pH Sensor',
    'Water Level Sensor (mm)',
    'light_temp_ratio'
  ]

  categorical_features_reg: ['Plant Type-Stage', 'Previous Cycle Plant Type', 'System Location Code']

  categorical_features_class: ['Previous Cycle Plant Type', 'System Location Code', 'pH Category Clustered']

  feature_names: [
    'System Location Code', 
    'Previous Cycle Plant Type', 
    'Temperature Sensor (°C)', 
    'Light Intensity Sensor (lux)', 
    'CO2 Sensor (ppm)', 
    'EC Sensor (dS/m)', 
    'O2 Sensor (ppm)', 
    'Nutrient N Sensor (ppm)', 
    'Nutrient P Sensor (ppm)', 
    'Nutrient K Sensor (ppm)', 
    'pH Sensor', 
    'Water Level Sensor (mm)',
    'pH Category Clustered'
  ]

models:
  rf:
    n_estimators: [100, 200, 300, 400, 500]
    max_depth: [10, 20, 30, 40, 50]
    min_samples_split: [2, 5, 10]
    min_samples_leaf: [1, 2, 4]
    max_features: ['sqrt', 'log2']
    bootstrap: [True, False]
  
  svm:
    kernel: ['linear', 'rbf', 'poly', 'sigmoid']
    C: [0.1, 1, 10, 100]
    gamma: [1, 0.1, 0.01, 0.001, 'scale', 'auto']
    degree: [2, 3, 4, 5]
    coef0: [0.0, 0.1, 0.5, 1.0]

  svr:
    C: [0.1, 1, 10, 100]
    gamma: ['scale', 'auto', 0.1, 0.01]
    kernel: ['rbf', 'linear', 'poly']
    epsilon: [0.01, 0.1, 0.2, 0.5]
    degree: [2, 3]
    coef0: [0.0, 0.1, 1.0]

  gb:
    n_estimators: [50, 100, 200, 300, 400]
    learning_rate: [0.01, 0.05, 0.1, 0.2, 0.3]
    max_depth: [3, 5, 7, 10]
    subsample: [0.6, 0.7, 0.8, 0.9, 1.0]
    min_samples_split: [2, 5, 10]
    min_samples_leaf: [1, 2, 4]
    max_features: ['sqrt', 'log2']

  rf_reg:
    n_estimators: [100, 200, 300, 400, 500]
    max_depth: [10, 20, 30, 40, 50, null]
    min_samples_split: [2, 5, 10]
    min_samples_leaf: [1, 2, 4]
    max_features: ['sqrt', 'log2', null]
    bootstrap: [True, False]

  xgb_reg:
    n_estimators: [100, 200, 300, 500, 1000]
    max_depth: [3, 5, 7, 9]
    learning_rate: [0.01, 0.05, 0.1, 0.2]
    subsample: [0.6, 0.8, 1.0]
    colsample_bytree: [0.6, 0.8, 1.0]
    min_child_weight: [1, 3, 5]
    gamma: [0, 0.1, 0.2]
    reg_alpha: [0, 0.1, 1.0]
    reg_lambda: [0, 1.0, 10.0]

experiment:
  models: 
      classification: ['rf', 'gb']
      regression: ['rf_reg', 'xg_reg']
  
  output_model_path: '../models'
  random_state: 42
  n_iter: 20